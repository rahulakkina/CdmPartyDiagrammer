package oracle.app.cdm.diagram.view;

import oracle.app.cdm.diagram.view.common.PartyRelationshipVORow;

import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 22 15:17:22 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PartyRelationshipVORowImpl extends ViewRowImpl implements PartyRelationshipVORow {
    public static final int ENTITY_PARTYEO = 0;
    public static final int ENTITY_RELATIONSHIPEO = 1;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PartyType,
        PartyUniqueName,
        Rowid,
        PartyName,
        RelationshipCode,
        Rowid1,
        ObjectId,
        ObjectType,
        SubjectId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PARTYTYPE = AttributesEnum.PartyType.index();
    public static final int PARTYUNIQUENAME = AttributesEnum.PartyUniqueName.index();
    public static final int ROWID = AttributesEnum.Rowid.index();
    public static final int PARTYNAME = AttributesEnum.PartyName.index();
    public static final int RELATIONSHIPCODE = AttributesEnum.RelationshipCode.index();
    public static final int ROWID1 = AttributesEnum.Rowid1.index();
    public static final int OBJECTID = AttributesEnum.ObjectId.index();
    public static final int OBJECTTYPE = AttributesEnum.ObjectType.index();
    public static final int SUBJECTID = AttributesEnum.SubjectId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PartyRelationshipVORowImpl() {
    }

    /**
     * Gets PartyEO entity object.
     * @return the PartyEO
     */
    public EntityImpl getPartyEO() {
        return (EntityImpl) getEntity(ENTITY_PARTYEO);
    }

    /**
     * Gets RelationshipEO entity object.
     * @return the RelationshipEO
     */
    public EntityImpl getRelationshipEO() {
        return (EntityImpl) getEntity(ENTITY_RELATIONSHIPEO);
    }


    /**
     * Gets the attribute value for PARTY_TYPE using the alias name PartyType.
     * @return the PARTY_TYPE
     */
    public String getPartyType() {
        return (String) getAttributeInternal(PARTYTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTY_TYPE using the alias name PartyType.
     * @param value value to set the PARTY_TYPE
     */
    public void setPartyType(String value) {
        setAttributeInternal(PARTYTYPE, value);
    }

    /**
     * Gets the attribute value for PARTY_UNIQUE_NAME using the alias name PartyUniqueName.
     * @return the PARTY_UNIQUE_NAME
     */
    public String getPartyUniqueName() {
        return (String) getAttributeInternal(PARTYUNIQUENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTY_UNIQUE_NAME using the alias name PartyUniqueName.
     * @param value value to set the PARTY_UNIQUE_NAME
     */
    public void setPartyUniqueName(String value) {
        setAttributeInternal(PARTYUNIQUENAME, value);
    }

    /**
     * Gets the attribute value for ROWID using the alias name Rowid.
     * @return the ROWID
     */
    public RowID getRowid() {
        return (RowID) getAttributeInternal(ROWID);
    }

    /**
     * Gets the attribute value for PARTY_NAME using the alias name PartyName.
     * @return the PARTY_NAME
     */
    public String getPartyName() {
        return (String) getAttributeInternal(PARTYNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTY_NAME using the alias name PartyName.
     * @param value value to set the PARTY_NAME
     */
    public void setPartyName(String value) {
        setAttributeInternal(PARTYNAME, value);
    }

    /**
     * Gets the attribute value for RELATIONSHIP_CODE using the alias name RelationshipCode.
     * @return the RELATIONSHIP_CODE
     */
    public String getRelationshipCode() {
        return (String) getAttributeInternal(RELATIONSHIPCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for RELATIONSHIP_CODE using the alias name RelationshipCode.
     * @param value value to set the RELATIONSHIP_CODE
     */
    public void setRelationshipCode(String value) {
        setAttributeInternal(RELATIONSHIPCODE, value);
    }

    /**
     * Gets the attribute value for ROWID using the alias name Rowid1.
     * @return the ROWID
     */
    public RowID getRowid1() {
        return (RowID) getAttributeInternal(ROWID1);
    }

    /**
     * Gets the attribute value for OBJECT_ID using the alias name ObjectId.
     * @return the OBJECT_ID
     */
    public Long getObjectId() {
        return (Long) getAttributeInternal(OBJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for OBJECT_ID using the alias name ObjectId.
     * @param value value to set the OBJECT_ID
     */
    public void setObjectId(Long value) {
        setAttributeInternal(OBJECTID, value);
    }

    /**
     * Gets the attribute value for OBJECT_TYPE using the alias name ObjectType.
     * @return the OBJECT_TYPE
     */
    public String getObjectType() {
        return (String) getAttributeInternal(OBJECTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for OBJECT_TYPE using the alias name ObjectType.
     * @param value value to set the OBJECT_TYPE
     */
    public void setObjectType(String value) {
        setAttributeInternal(OBJECTTYPE, value);
    }

    /**
     * Gets the attribute value for SUBJECT_ID using the alias name SubjectId.
     * @return the SUBJECT_ID
     */
    public Long getSubjectId() {
        return (Long) getAttributeInternal(SUBJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBJECT_ID using the alias name SubjectId.
     * @param value value to set the SUBJECT_ID
     */
    public void setSubjectId(Long value) {
        setAttributeInternal(SUBJECTID, value);
    }


}

